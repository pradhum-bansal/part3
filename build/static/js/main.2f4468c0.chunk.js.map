{"version":3,"sources":["components/Filter.js","services/persons.js","components/PersonForm.js","components/Person.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","onChange","handleFilterChange","value","baseUrl","axios","get","newPerson","post","then","response","data","id","delete","put","PersonForm","onSubmit","handleSubmit","handleNoteChange","nameValue","handleNumberChange","numberValue","type","Person","name","number","data-id","onClick","handleClick","Persons","persons","personsList","map","person","Notification","message","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","nameFilter","setNameFilter","setMessage","People","useEffect","console","log","contactservices","deletePerson","finally","filter","p","filtered","toLocaleLowerCase","includes","event","target","handleNameFilter","preventDefault","window","confirm","people","find","returnedPerson","concat","setTimeout","catch","error","addPerson","dataset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f4468c0.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Filter = (props) =>{\r\n    return(\r\n        <div>\r\n          filter shown with <input onChange={props.handleFilterChange} value ={props.value}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\n const baseUrl = \"/api/persons\";\r\n\r\n const getAll = () =>\r\n {\r\n  return axios.get(baseUrl)\r\n\r\n}\r\n\r\nconst create = (newPerson) => {\r\n    const request = axios.post(baseUrl,newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request \r\n  };\r\n  const update = (id, newPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newPerson);\r\n    return request.then(response => response.data)\r\n   }\r\n\r\nexport default { getAll, \r\n     create,deletePerson,update}","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return(\r\n        <div>\r\n        <form  onSubmit = {props.handleSubmit}>\r\n        <div>\r\n          name: <input onChange={props.handleNoteChange } value = {props.nameValue} />\r\n        </div>\r\n        <div>\r\n          number: <input onChange={props.handleNumberChange}value = {props.numberValue}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person =(props)=>\r\n{\r\n    return(\r\n        <li key = {props.id}>{props.name} {props.number} <button data-id={props.id} onClick={props.handleClick}>\r\n        Delete\r\n      </button></li>\r\n      )\r\n}\r\n\r\nconst Persons = ({ persons , handleClick}) => {\r\n    const personsList = persons.map(person => {\r\n      return (\r\n        <Person key={person.name} id = {person.id} name={person.name} number={person.number} handleClick = {handleClick} />\r\n      )\r\n    })\r\n  \r\n    return <div>{personsList}</div>\r\n  }\r\n\r\n  export default Persons;","const Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n          <h1>\r\n        {message}\r\n        </h1>\r\n      </div>\r\n    )\r\n  }\r\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport contactservices from './services/persons'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Person'\nimport './index.css'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [nameFilter, setNameFilter] = useState('')\n  const [message,setMessage] = useState('message')\n  const People = persons.map(person =>{\n    return person.name})\n\n  const addPerson = (event)=> {\n    event.preventDefault()\n    \n   if(People.includes(newName))\n    {\n     if( window.confirm( `${newName} is already added to the phonebook, ` +\n      \"replace the old number with a new one?\"))\n      {\n        const people = persons.find(p=>p.name === newName)\n        const id = people.id\n        const newPerson = {...people, number: newNumber}\n        contactservices.update(id,newPerson).then(returnedPerson => {\n          setPersons(persons.map(p => (p.id !== id ? p : returnedPerson)));\n          return true;\n        })\n      }\n    }\n    \n    else{\n    const p = {\n      name: newName,\n      number: newNumber\n    }\n   contactservices.create(p)\n    .then(response => {\n      setPersons(persons.concat(response))\n\n      setMessage(\n        `contact ${p.name} added successfully`\n      )\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n\n      setNewName('')\n      setNewNumber('')\n      \n      \n    })\n\n    .catch((error) => {\n      setMessage(\"number or name must be greater\")\n    })\n    \n    \n  }\n}\n\n\nuseEffect(() => {\n  console.log('effect')\n contactservices.getAll()\n    .then(response => {\n      setPersons(response.data)\n    })\n}, [])\n\n  const handleNoteChange = (event) => {\n\n    setNewName(event.target.value)  \n  }\n  const handleNumberChange = (event) => {\n    \n    setNewNumber(event.target.value)\n  }\n  const handleNameFilter = (event) => {\n    \n    setNameFilter(event.target.value)\n  }\n\n  const handleClick=(event)=>\n  {\n    const id = (event.target.dataset.id);\n    const person = persons.find(p => p.id===id)\n   const confirm = window.confirm(`Delete ${person.name}?`)\n    if(confirm) deletePerson(id)\n  }\n \n\n  const deletePerson = ( id ) => {\n    contactservices.deletePerson(id)\n    .finally(()=> setPersons(persons.filter(p=> p.id !== id)))\n  }\n  const filtered = persons.filter(person => {\n    return (\n      person.name.toLocaleLowerCase().includes(nameFilter.toLocaleLowerCase())\n    )\n  })\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n     \n        <Filter handleFilterChange = {event => handleNameFilter(event)} value = {nameFilter}/>\n        <Notification message = {message}/>\n      <h2>Add a new</h2>\n      <PersonForm\n      nameValue = {newName}\n      numberValue = {newNumber}\n      handleSubmit = {event => addPerson(event)} \n      handleNoteChange = {event => handleNoteChange(event)}\n      handleNumberChange = {event => handleNumberChange(event)}\n      />\n      <h2>Numbers</h2>\n      <Persons persons = {filtered}  handleClick = {event => handleClick(event)}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}